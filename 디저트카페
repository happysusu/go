
#include<cstdio>
#include<iostream>
using namespace std;
int n;
int map[20][20];
bool isEat[101];

int main()
{
	int T;
	scanf("%d", &T);
	for (int tc = 1; tc <= T; tc++)
	{
		int ans = -1;
		scanf("%d", &n);
		for (int i = 0; i < n; i++)
		{
			for (int j = 0; j < n; j++)
			{
				scanf("%d", &map[i][j]);
			}
		}

		for (int i = 0; i < n; i++)
		{
			for (int j = 0; j < n; j++)
			{
				for (int a = 1; a < n; a++)
				{
					for (int b = 1; b < n; b++)
					{

						if (j + a <= n - 1
							&& i + a + b <= n - 1
							&& j - b >= 0
							&& (a + b) * 2 > ans)
						{
							for (int i = 0; i < 101; i++)
							{
								isEat[i] = false;
							}

							bool eat = true;
							int curx = j, cury = i;

							for (int k = 0; k < a; k++)
							{
								curx++; cury++;

								if (!isEat[map[cury][curx]])
									isEat[map[cury][curx]] = true;
								else
								{
									eat = false;
									break;
								}
							}
							if (!eat) continue;
							for (int k = 0; k < b; k++)
							{
								curx--; cury++;

								if (!isEat[map[cury][curx]])
									isEat[map[cury][curx]] = true;
								else
								{
									eat = false;
									break;
								}
							}
							if (!eat) continue;
							for (int k = 0; k < a; k++)
							{
								curx--; cury--;

								if (!isEat[map[cury][curx]])
									isEat[map[cury][curx]] = true;
								else
								{
									eat = false;
									break;
								}
							}
							if (!eat) continue;
							for (int k = 0; k < b; k++)
							{
								curx++; cury--;

								if (!isEat[map[cury][curx]])
									isEat[map[cury][curx]] = true;
								else
								{
									eat = false;
									break;
								}
							}
							if (!eat) continue;


							ans = 2 * (a + b);
						}

					}
				}
			}
		}

		printf("#%d %d", tc, ans);
	}
	return 0;
}
